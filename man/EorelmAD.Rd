% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EorelmAD.R
\name{EorelmAD}
\alias{EorelmAD}
\title{Ensemble based online recurrent extream learning machine anomaly detector (EORELM-AD)}
\description{
R6 class that implements our ensemble-based online recurrent extreme learning machine anomaly
detector (EORELM-AD). EORELM-AD is an online univariate time series anomaly detector based on an
online recurrent extreme learning machine (OR-ELM) prediction model proposed by J. M. Park and
J. H. Kim (2017) <doi:10.1109/IJCNN.2017.7966094>. ORELM is an online learning algorithm that
trains single-hidden layer feedforward neural networks (SLFNs), able to learn data one-by-one
or chunk-by-chunk with fixed or varying data size.
}
\details{
EORELM-AD implements several online normalization techniques needed to train ORLEM. Then, based
on a window of normalized previous values it predicts the value of the current data point using
an ensemble of OR-ELMs initialized with different parameters. Finally, the anomaly score and
the anomaly label are computed based on past prediction errors. For this aim, several scoring
methods are available.
}
\examples{

## Generate data
set.seed(100)
n <- 350
x <- sample(1:100, n, replace = TRUE)
x[70:90] <- sample(110:115, 21, replace = TRUE)
x[25] <- 200
x[320] <- 170
df <- data.frame(timestamp = 1:n, value = x)


## Calculate anomalies
detector <- EorelmAD$new(
  n.train = 20,
  numLags = 10,
  numHiddenNeurons = c(20),
  normMethod = NULL,
  outlierMethod = "DSS",
  threshold = 0.5
)
result <- detector$predict(df$value)

## Plot results
res <- cbind(df, result)
PlotDetections(res, title = "EORELM-AD ANOMALY DETECTOR", return.ggplot = TRUE)

}
\references{
J. M. Park and J. H. Kim, Online recurrent extreme learning machine and its application to
time-series prediction, in Proceedings of the International Joint Conference on Neural Networks,
2017, pp. 1983â€“1990.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{EorelmAD$new()}}
\item \href{#method-predict}{\code{EorelmAD$predict()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new EorelmAD object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EorelmAD$new(
  n.train,
  numLags = 100,
  ncomb = 30,
  k = 6,
  numHiddenNeurons = c(20, 25, 30, 35, 40, 45, 50),
  outputWeightForgettingFactor = seq(0.9, 1, 0.01),
  inputWeightForgettingFactor = 1,
  normMethod = "DN",
  normParams = NULL,
  outlierMethod = "DS",
  outlierParams = list(),
  threshold = 0.5,
  reduceFP = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{n.train}}{Number of points of the dataset that correspond to the training set.
\code{n.train} must be greater or equal to \code{numLags} + 2.}

\item{\code{numLags}}{Number of past values needed to make the prediction. \code{numLags} must be
lower or equal to \code{n.train} - 2.}

\item{\code{ncomb}}{Number of base learners to initialize during the training stage.}

\item{\code{k}}{Numer of best base learners to be used during the test stage.}

\item{\code{numHiddenNeurons}}{Number or vector of possible values of hidden neurons.}

\item{\code{outputWeightForgettingFactor}}{Value or vector of possible values of the output
weight forgetting factor. All values must be between 0 and 1. If it is 1, it does not
forget anything.}

\item{\code{inputWeightForgettingFactor}}{Value or vector of possible values of the input
weight forgetting factor. All values must be between 0 and 1. If it is 1, it does not
forget anything.}

\item{\code{normMethod}}{The normalization method to be used. Possible values are: NULL, "WN",
"DN", "AN", and "AN2". Note that if the value of \code{normMethod} is NULL, the input data
 must be previously normalized or standardized.}

\item{\code{normParams}}{A list with the additional parameters to configure selected
\code{normMethod}; by default NULL. Please for more details see,
\code{\link{WindowNormalizer}} (WN), \code{\link{DinamycNormalizer}} (DN),
\code{\link{AdaptiveNormalizer}} (AN), \code{\link{AdaptiveNormalizer2}} (AN2).}

\item{\code{outlierMethod}}{The outlier method to be used to compute the anomaly score
based on historical prediction errors. Possible values are: "AL", "DT", "SS" and "DSS".}

\item{\code{outlierParams}}{A list with the additional parameters to configure selected
\code{outlierMethod}; by default empty list. Please for more details see,
\code{\link{AnomalyLikelihoodScorer}}(AL), \code{\link{DynamicThresholdScorer}} (DT),
\code{\link{SigmaScorer}} (SS) and \code{\link{DynamicSigmaScorer}} (DSS).}

\item{\code{threshold}}{Anomaly threshold. A integer value between [0,1].}

\item{\code{reduceFP}}{If TRUE reduces false positives.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new EorelmAD object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-predict"></a>}}
\if{latex}{\out{\hypertarget{method-predict}{}}}
\subsection{Method \code{predict()}}{
It determines whether or not the current value is an anomaly and its degree of
abnormality.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EorelmAD$predict(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{New data value to be evaluated.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Dataset conformed by the following columns:

\tabular{ll}{
  \code{predictedInput} \tab Standardized predicted value for the current input \code{x}. \cr
  \code{normalizedInput} \tab Normalized value of the current input \code{x}. \cr
  \code{error} \tab Prediction error.\cr
  \code{is.anomaly} \tab 1 if the value is anomalous, 0 otherwise.\cr
  \code{anomaly.score} \tab Probability of anomaly.\cr
}
}
}
}
